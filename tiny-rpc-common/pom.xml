<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>tiny-rpc</artifactId>
        <groupId>com.geekbing</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>tiny-rpc-common</artifactId>
    <packaging>jar</packaging>

    <name>tiny-rpc-common</name>
    <url>http://maven.apache.org</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!-- slf4j日志框架模块，用于在代码中输出应用程序的相关日志 -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.25</version>
        </dependency>
        <!-- Netty模块，提供NIO通讯所需的API，它是整个RPC框架的基础 -->
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
            <version>4.1.11.Final</version>
        </dependency>
        <!-- Protostuff核心模块，提供对象的序列化与反序列化功能 -->
        <dependency>
            <groupId>io.protostuff</groupId>
            <artifactId>protostuff-core</artifactId>
            <version>1.5.4</version>
        </dependency>
        <!-- Protostuff运行时模块，用于生成所需的Protostuff Schema对象 -->
        <dependency>
            <groupId>io.protostuff</groupId>
            <artifactId>protostuff-runtime</artifactId>
            <version>1.5.4</version>
        </dependency>
        <!-- 提供比JDK更加高效的反射功能，可根据Java类来创建对应的实例对象，在对象的反序列化时需要用到它 -->
        <dependency>
            <groupId>org.objenesis</groupId>
            <artifactId>objenesis</artifactId>
            <version>2.5.1</version>
        </dependency>
    </dependencies>
</project>